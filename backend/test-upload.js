import fs from 'fs';
import path from 'path';

// Testar se o diret√≥rio de uploads existe
console.log('üîç Verificando diret√≥rio de uploads...');
const uploadDir = path.join(process.cwd(), 'uploads', 'json');
console.log('üìÅ Diret√≥rio de uploads:', uploadDir);

if (fs.existsSync(uploadDir)) {
  console.log('‚úÖ Diret√≥rio de uploads existe');
  
  // Verificar permiss√µes
  const stats = fs.statSync(uploadDir);
  console.log('üìä Permiss√µes:', stats.mode.toString(8));
  console.log('üë§ Propriet√°rio:', stats.uid);
  console.log('üë• Grupo:', stats.gid);
} else {
  console.log('‚ùå Diret√≥rio de uploads n√£o existe');
}

// Testar se conseguimos criar um arquivo
console.log('\nüîç Testando cria√ß√£o de arquivo...');
const testFile = path.join(uploadDir, 'test.json');
try {
  fs.writeFileSync(testFile, JSON.stringify({ test: true }));
  console.log('‚úÖ Arquivo de teste criado com sucesso');
  
  // Verificar se o arquivo foi criado
  if (fs.existsSync(testFile)) {
    console.log('‚úÖ Arquivo existe ap√≥s cria√ß√£o');
    
    // Remover arquivo de teste
    fs.unlinkSync(testFile);
    console.log('‚úÖ Arquivo de teste removido');
  }
} catch (error) {
  console.error('‚ùå Erro ao criar arquivo de teste:', error.message);
}

// Verificar se o multer est√° funcionando
console.log('\nüîç Verificando configura√ß√£o do multer...');
try {
  const multer = await import('multer');
  console.log('‚úÖ Multer importado com sucesso');
  
  // Testar configura√ß√£o b√°sica
  const storage = multer.default.diskStorage({
    destination: (req, file, cb) => {
      cb(null, uploadDir);
    },
    filename: (req, file, cb) => {
      const uniqueName = `${Date.now()}-${file.originalname}`;
      cb(null, uniqueName);
    }
  });
  
  console.log('‚úÖ Configura√ß√£o do storage criada');
} catch (error) {
  console.error('‚ùå Erro ao configurar multer:', error.message);
}

console.log('\n‚úÖ Teste conclu√≠do!');
